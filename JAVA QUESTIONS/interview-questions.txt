                                                     JAVA INTERVIEW QUESTIONS...!
                                                     ***************************
1. What Is java?
    - Java is an object-oriented programming language.And it is created in 1995 by "James Gosling".Now owned by "Oracle" Everything in java is 
      associated with classes and objects,along with its attributes and methods.

2. Why java is a platform-independent?
    - Java code can be written once and run anywhere.Because of Bytecode is platform-independent and can be executed on any platform through 
      java virtual machine

3. Why java is not 100% Object-Oriented?**
    - Java is not considered a pure object-oriented programming language.
    - The main reason it supports primitive type values.Like Boolean,Byte,Char,Int,Short,Long,Float,Double.
    - To make them Object-Oriented we have wrapper classes which actually "wrap" the primitive data type into an object of that class.

4. What is a Method/Functions in java?
    - It is a block of code which is use to execute specific task.
    - Method is used for elimination of duplicate lines of code.
    - Method is used for code re-useability.
     --> CALLING METHOD:-
          - A method which is calling another method is calles as calling method
     --> CALLED METHOD:-
          - A method which is called another method is calles as called method

5. Define JRE in Java?
    - The Java Runtime Environment is a set of software tools which are used for developing Java applications. 

6. Define JVM in java?
    - JVM stands for Java Virtual Machine.
    - It is a interperted which help to read byte code to .class file and it help to execute the given class files.

7. Define JIT in java?
    - JIT stands for Just In Time.
    - It help to convert byte code into binary.

8. What is Variables?

9. Explain Logical operators?
    - Logical Operators are used to combain multiple boolean conditions as one single conditions.
    - Logical Operators always return boolean values.
    - Type of logical operators.
            * AND -> &&
            * OR  -> || 
            * XOR -> ^
    --> AND OPERATORS :-
          # Logical AND operators will return true.
          # If and only if the return of both the boolean condition result is true and otherwise if return false.
    --> OR OPERATORS :-
          # Logical OR operators will return false.
          # If and only if the return of both the boolean condition result is false and otherwise if return true.
    --> XOR OPERATORS :-
          # Logical XOR operators will return false.
          # If and only if the return of both the boolean condition result is same false or true and otherwise if return true.

10. what are the various type of Access Specifiers in java?
    - There are four type of access specifiers:-
            1.Public     = The data items  and functions are accessiable from anywhaere
            2.Protected  = Accessible from the classes,package,subclass and from within the class
            3.Pkg-level  = They strictiy accessed only by the classes present in same package.
            4.Private    = Accessible from the class where they are define

11. What is flow control statement?
    - Flow control statement are used to control the execution flow of the program at the numbers.
    - Flow control statement are 2 types.
    - Decision making statement.
    - looping statement.

12. What is Decision Making?
    - Decision making statement are used to execute one or group of statement based on a boolean conditions.
    - Boolean condition/ expresion --> a statement written using comparsion operators and logical operators is called boolean conditions.

    # Types of Decision Making.
        * if
        * if-else
        * if-else-if
        * switch

   ##  IF CONDITIONS
          - IF is a type of decision making one or group of statement written with in the if body will be executed if and only if result of
            boolean condition is true.

            SYNTAX:  if(boolean condition)
                      {
                         // STATEMENTS.....
                      }

   ##  IF-ELSE CONDITIONS
          - IF-ELSE is a type of decision making statement where statement of if body are executed if result of boolean condition is true else 
            the statement of else body are executed. 
          
            SYNTAX:  if(boolean condition)
                      {
                         // STATEMENTS.....
                      }esle
                          {
                             // STATEMENTS.....
                          }

   ##  IF-ELSE-IF CONDITIONS
          - IF is a type of decision making statement which is used to whenever there are multiple boolean condition to be evaluated to executed 
            different set of statement

            SYNTAX:  if(boolean condition)
                      {
                         // STATEMENTS.....
                      }else if 
                        {
                           // STATEMENTS.....
                        }else if 
                           {
                             // STATEMENTS.....
                           }
   ##  SWITCH CASE
          - It is a type of decision making statement which is used to whenever there are only equals condition to be evaluated to executed different 
            set of statement.

            SYNTAX:  Switch(choice)
                      {
                         case 1:  STATEMENT;
                          Break;
                         case 2:  STATEMENT;
                          Break;
                         case 3:  STATEMENT;
                          Break;
                         desult: statement
                      }

   ##  NESTED-IF CONDITIONS
          - IF we written if statement with in the body of another if statement is called as nested if

            SYNTAX:  if(boolean condition)
                      {
                        if(boolean condition)
                          {
                            if (boolean condition)
                               {
                                 // STATEMENTS.....
                               }
                                // STATEMENTS.....
                          }
                             // STATEMENTS.....
                      }else
                         {
                                // STATEMENTS.....
                         } 










  
